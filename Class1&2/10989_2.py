# 힙정렬
# 기수 정렬은 메모리 초과임 

'''
힙의 기본 개념 
- 힙은 특별한 형태의 이진 트리로서 다음의 두 가지 속성을 만족한다.

1. Shape Property : 모든 레벨이 완전히 채워진 완전 이진 트리이다. 마지막 레벨을 제외한 모든 레벨은 완전히 채워져 있으며, 마지막 레벨은 왼쪽부터 채워진다.

2. Heap Property : 모든 노드는 자식 노드보다 큰 값을 가진다. 큰 값을 가지는 힙을 최대 힙, 작은 값을 가지는 힙을 최소 힙 이라고 한다.

힙 정렬의 FLOW

1. 힙 생성 : 먼저 주어진 배열을 최대 힙 구조로 변환한다. 이 단계ㅔ에서 모든 부모 노드는 자식 노드보다 큰 값을 가져야함

2. 힙에서 최댓값 제거 및 정렬 : 힙의 루트에는 최댓값이 있다. 이 값을 배열의 마지막 요소와 교환한 다음, 마지막 요소를 제외하고 나머지 트리를 다시 힙 구조로 조정한다. 이과정을 반복하면 배열이 오름차순으로 정렬된다.

상세 FLOW :

1. 주어진 배열을 최대 힙 구조로 만든다.
2. 현재 최대 힙의 루트(최댓값)와 배열의 마지막 요소를 교환한다.
3. 배열에서 마지막 요소(현재의 최댓값)을 제외하고, 나머지 부분을 다시 최대 힙으로 만든다.
4. 위의 과정을 배열의 모든 요소가 정렬될 때까지 반복한다.
'''

import heapq
import sys


import sys

n = int(sys.stdin.readline().strip())
heap = []
for _ in range(n):
    num = sys.stdin.readline().strip()
    heap.append(int(num))
heapq.heapify(heap)

for num in heap:
    print(num)

